name: Android Build

on:
  workflow_dispatch:  # 수동 실행
    inputs:
      build_type:
        description: '빌드 타입'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      create_release:
        description: 'GitHub Release 생성'
        required: false
        default: false
        type: boolean

  # push 시 자동 빌드는 주석 처리 (필요시 활성화)
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'apps/app/**'

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Build web app
      working-directory: apps/app
      run: |
        pnpm install
        pnpm build

    - name: Create www symlink
      working-directory: apps/app
      run: ln -sf build www

    - name: Setup Android project
      working-directory: apps/app
      run: |
        # Capacitor 설정 파일 생성
        if [ ! -f capacitor.config.json ]; then
          echo '{
            "appId": "com.nanumpay.app",
            "appName": "NanumPay",
            "webDir": "www",
            "server": {
              "androidScheme": "https"
            }
          }' > capacitor.config.json
        fi

        # Android 플랫폼 추가
        npx cap add android || true
        npx cap sync android

    - name: Create local.properties
      working-directory: apps/app/android
      run: |
        echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

    - name: Setup Gradle
      working-directory: apps/app/android
      run: |
        # Java 17 설정 추가
        if ! grep -q "compileOptions" app/build.gradle; then
          sed -i '/android {/a\
        \
            compileOptions {\
                sourceCompatibility JavaVersion.VERSION_17\
                targetCompatibility JavaVersion.VERSION_17\
            }' app/build.gradle
        fi

    - name: Build Debug APK
      working-directory: apps/app/android
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: apps/app/android/app/build/outputs/apk/debug/app-debug.apk

    - name: Create Release
      if: github.ref == 'refs/heads/main' && success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Build ${{ github.run_number }}
        draft: false
        prerelease: true
        files: apps/app/android/app/build/outputs/apk/debug/app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on PR (if PR)
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v7
      with:
        script: |
          const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `✅ Android 빌드가 성공적으로 완료되었습니다!\n\n[APK 다운로드](${artifactUrl})`
          })