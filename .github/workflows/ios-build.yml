name: iOS Build

on:
  workflow_dispatch:  # 수동 실행
    inputs:
      build_type:
        description: '빌드 타입'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      deploy_testflight:
        description: 'TestFlight 배포'
        required: false
        default: false
        type: boolean

  # push 시 자동 빌드는 주석 처리 (필요시 활성화)
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'apps/app/**'

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Build web app
      working-directory: apps/app
      run: |
        pnpm install
        pnpm build

    - name: Create www symlink
      working-directory: apps/app
      run: ln -sf build www

    - name: Add iOS platform
      working-directory: apps/app
      run: |
        npx cap add ios || true
        npx cap sync ios

    - name: Setup Ruby for Fastlane (optional)
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'

    # 인증서 설정 (시크릿 필요)
    # - name: Install Apple Certificate
    #   env:
    #     BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
    #     P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
    #     BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
    #     KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
    #   run: |
    #     # 인증서와 프로비저닝 프로파일 설치
    #     # 자세한 스크립트는 Apple 문서 참조

    - name: Build iOS app
      working-directory: apps/app/ios/App
      run: |
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -configuration Debug \
          -sdk iphonesimulator \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO

    - name: Archive build artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: apps/app/ios/App/build/Build/Products/Debug-iphonesimulator/

    - name: Comment on PR (if PR)
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ iOS 빌드가 성공적으로 완료되었습니다!'
          })